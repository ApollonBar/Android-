https是什么？

HTTP传输在网络上不安全，容易被拦截和修改。为了防止篡改，在HTTP上面封装了一层就是HTTPS层，简称SSL 或者TLS 大体意思就是传输加密层。基本原理是通过对称加密和非对称加密实现的传输和验证

 

HTTPS的基本流程

发送请求要求就行TLS通信，客户端待着客户端的随机数 和加密套件（tls版本，加密算法 hash算法）

服务器返回确认，并发送服务器的随机数和确认客户端的加密套件（tls版本，加密算法，hash算法）

经过这两部，双发持有一直的套件和两个一样的随机数

 

服务器继续发送HTTPS证书

证书包含服务器的地址，服务器的非对称加密公钥，整个证书用验证机构私钥签名得到的HASH值通过这个HASH签名来验证。还包含验证机构的相关信息（公钥啊，签发方式啊什么的）

通过每个系统自带的验证机构列表，从证书中查找到匹配的验证机构。然后用系统的证书机构的公钥对证书的内容进行验证。验证流程，证书机构对证书做HASH算法得到HASH值之后用私钥进行签名得到签名的数据，客户端获取证书的HASH值，然后通过根证书的签名解密私钥得到证书机构的HASH值进行比对，如果一样则可信赖，通过验证。

 

证书验证过后，客户端就会信任证书中服务器的公钥，通过公钥加密一个随机数，发送给服务器器，服务器解密后拿到随机数，跟开始之前的2个随机数组合，生成一个对称加密的公钥，客户端也是有这三个随机数的，双方都持有私钥了等于，通过私钥进行对称加密的传输，至此整个流程就明白了。

 

总结.HTTPS的根本原来就是对称加密和非对称加密。 有三个随机数生成私钥进行对称加密，服务器公钥是生成对称加密私钥的关键，证书机构的签名是验证服务器证书的关键。

 

客户端---------------------------》我要TLS通信 （随机数1） （加密套件 TLS版本 HASH算法） --------------------------》服务器

服务器---------------------------》我知道了（随机数2）（确认选择一个加密套件 HASH算法，TLS版本）------------------》客户端

服务器---------------------------》这个是证书客户端接好咯------------------------》客户端

客户端验证，先对证书做里面的HOST验证，通过，对证书内容HASH 拿到HASH值。查找设备根证书，对证书机构的签名解密拿到证书机构对证书的HASH值，比对通过下一步

客户端-------------------------》验证通过了，老哥拿你的公钥加密的随机数3收好了----------------------------------》服务器

服务器-------------------------》收到，结合三个随机数算出对称加密的私钥-------------》老哥咱可以对称加密沟通啦

客户端--------------------------》跟服务器持有一样的随机数统一可以得到对称加密私钥------------------》没问题来吧

大体就是这样

 

